// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl
/**
 * 4-way demultiplexor:
 * [a, b, c, d] = [in, 0, 0, 0] if sel == 00
 *                [0, in, 0, 0] if sel == 01
 *                [0, 0, in, 0] if sel == 10
 *                [0, 0, 0, in] if sel == 11
 */
CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    DMux(in=in, sel=sel[0], a=o0, b=o1);
    DMux(in=o0, sel=sel[1], a=a, b=c);
    DMux(in=o1, sel=sel[1], a=b, b=d);

    // 常规设计思路
    // in sel[1] sel[0]  a b c d
    // 0  0      0       0 0 0 0
    // 0  0      1       0 0 0 0
    // 0  1      0       0 0 0 0
    // 0  1      1       0 0 0 0
    // 1  0      0       1 0 0 0  in and not sel[0] and not sel[1] -> a
    // 1  0      1       0 1 0 0  in and not sel[1] and sel[0] -> b
    // 1  1      0       0 0 1 0  in and sel[1] and not sel[0] -> c
    // 1  1      1       0 0 0 1  in and sel[0] and sel[1] -> d

    // Not(in=sel[0], out=notsel0); 
    // And(a=in, b=notsel0, out=inandnotsel0);
    // Not(in=sel[1], out=notsel1);
    // And(a=inandnotsel0, b=notsel1, out=a);
    // And(a=in, b=notsel1, out=inandnotsel1);
    // And(a=inandnotsel1, b=sel[0], out=b);
    // And(a=in, b=sel[1], out=inandsel1);
    // And(a=inandsel1, b=notsel0, out=c);
    // And(a=in, b=sel[0], out=inandsel0);
    // And(a=inandsel0, b=sel[1], out=d);
}